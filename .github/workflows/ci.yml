name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install Docker for Linux/MacOS/Windows
      - name: Set up Docker (Linux/MacOS)
        if: ${{ runner.os != 'Windows' }}
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Desktop (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          choco install docker-desktop --confirm
          docker --version

      # Step 3: Start Docker Compose services
      - name: Start services with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d --build

      # Step 4: Wait for services to be ready
      - name: Wait for MariaDB to be ready
        run: |
          for i in {1..20}; do
            if docker exec mariadb mysqladmin ping -h"127.0.0.1" --silent; then
              echo "MariaDB is up and running!"
              break
            fi
            echo "Waiting for MariaDB to be ready..."
            sleep 2
          done

      # Step 5: Install Python dependencies
      - name: Set up Python and Install Dependencies
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install pytest pytest-cov requests

      # Step 6: Run Pytest tests
      - name: Run tests with pytest
        run: |
          source venv/bin/activate
          pytest tests --cov=app --cov-report=term-missing

      # Step 7: Stop and clean up services
      - name: Shut down Docker Compose
        run: |
          docker-compose down

      # Step 8: Generate coverage report (optional)
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
